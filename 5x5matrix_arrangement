/*
creator: Andrew
date:1.12.2022
*/

// 5x5矩阵，四个角分别存放最小的元素（顺序为从左到右，从上到下依次从小到大存放），中心放最大数字
#include <stdio.h>

int main(int argc, char* argv[]) {
    // int num[5][5]={1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    int num[5][5]={11, 22, 10, 20, 1, 3, 5, 7, 9, 2, 4, 6, 8, 21, 23, 24, 25, 12, 13, 14, 15, 16, 17, 18, 19};
    int (*p)[5];
    int max, x=0, y=0;
    void minimun(int max, int (*p)[5]);
    p=num;

    max=*(*(p+2)+2);
    for (int i=0; i<5; i++) 
    {
        for (int j=0; j<5; j++)
        {
            if(*(*(p+i)+j) > max)
            {
                max = *(*(p+i)+j);
                x=i; y=j;
            }
        }
    }
    int alt;
    alt = *(*(p+2)+2);
    *(*(p+2)+2) = max;
    *(*(p+x)+y) = alt;

    minimun(max, num);

    int  count=0;
    for (int i=0; i<=5 && count<25; i++, count++)
    {
        if (i == 5)
        {
            printf("\n");
            i=0;
            p++;
        }
        printf("%-4d", (*p)[i]);
    }
    return 0;
}

void minimun(int max, int (*p)[5]) {
    int times = 0, loc, t, min;
    int x=0, y=0;
    while (times < 4)
    {
        min = max;
        switch (times)
        {
        case 0:
            for (int j=0; j < 25; j++)
            {
                if (*(*(p)+j) < min)
                {
                    min = *(*(p)+j);
                    loc = j;
                }
            }
            t = min;
            times++;
            break;
        default:
            for (int j=0; j < 25; j++)
            {
                if (*(*(p)+j) < min && *(*(p)+j) > t)
                {
                    min = *(*(p)+j);
                    loc = j;
                }
            }
            t = min;
            times++;
            break;
        }
        int alt;
        alt = *(*(p+x)+y);
        *(*(p+x)+y) = min;
        *(*(p)+loc) = alt;
        if (y!=4)
        {y=4;}
        else{x=4; y=0;}
    }
}
